@{
    ViewBag.Title = "Decrypt Config Section(s)";
}

@section scripts
{

    <script type="text/javascript">
        function DecryptViewModel() {
            var self = this;

            // thumbprint
            self.thumbprint = ko.observable().extend({
                required: {
                    message: 'Thumbprint is required.'
                },
                validation: {
                    validator: function (val) {
                        var isValid = false,
                            validation = this;
                        $.ajax({
                            url: '/CloudConfigCrypto/ValidatePrivateThumbprint',
                            type: 'POST',
                            data: { thumbprint: val },
                            async: false
                        })
                        .success(function (response) {
                            if (response === true) isValid = true;
                            else validation.message = response;
                        });
                        return isValid;
                    },
                    message: 'Your local computer certificate store does not contain a certificate with this thumbprint.',
                    params: self
                }
            });
            self.thumbprintEl = undefined;
            self.sampleThumbprint = '630e33c5ead42a5564e22d920a0c5ac4b10cf052'.toUpperCase();
            self.useSampleThumbprint = function () {
                self.thumbprint(self.sampleThumbprint);
                return false;
            };
            self.useCustomThumbprint = function () {
                self.thumbprint(undefined);
                $(self.thumbprintEl).focus();
                return false;
            };

            // encrypted
            self.encrypted = ko.observable().extend({
                required: {
                    message: 'Encrypted config section(s) is required.'
                }
            });
            self.encryptedEl = undefined;
            self.exampleConfigSections = '  <connectionStrings configProtectionProvider="CustomProvider">\n    <EncryptedData Type="http://www.w3.org/2001/04/xmlenc#Element" xmlns="http://www.w3.org/2001/04/xmlenc#">\n      <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes192-cbc" />\n      <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n        <EncryptedKey xmlns="http://www.w3.org/2001/04/xmlenc#">\n          <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5" />\n          <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n            <KeyName>rsaKey</KeyName>\n          </KeyInfo>\n          <CipherData>\n            <CipherValue>aA6C8LQzgGIHLkG15uBSGNpx2nmClGbzPUWbjJEUrEljKQFn/cSn1yT1RekP4y5zckltQae155zqso6bkhthuRlFkAWvKL6wd5nvIZU4/5HnyLZupqf2jzNVm+Gu2+zKs4eEBnLs9+p1eZ/zbbK9acx850cJrSTNeX5cO4bzO08TB81XCgDg4nafKqvz/CnbPz4aWT5SP/bs3V3DwOXtIKyQYTf7PkJatLQI5PkTWVt9dY9RatDyavBN0cT/4J6aIEfGxwGb9+bBVc+SrNraNQu2rj/k1tbb0aLbgKv2xyOzCXN2uwPjx06FhPX83T1ZzN1ehZaC8QtXj5PmQiWHaw==</CipherValue>\n          </CipherData>\n        </EncryptedKey>\n      </KeyInfo>\n      <CipherData>\n        <CipherValue>LyFGDOMnGRVfF8J2WC+2KSiPddT55gVVcxvkw/AJuUa2/yluDblj97M8rJai9VZ+zKxV6U6Y9eaFzrtvRyvwVb/Fvb3ku3HGjXTOqDyZckmgbiuTNAOtDoxgI7aIZWrl8oHdUVnf8zGU+yUIe5c7bCZwAqQnkg9UFDt3YX83BsdCeSfOkJdelcrViCrAdmOnpjuK4dXjebhtWbToTSurrj0pYDt0sfCPvv79IT4uQrvrt3eybwLBqJzl3HE1HBPN6PV/s4QWgQGzZcopIXy14o7BsXgGLvUFDcfYUAb+H550kFlZZFT5bzxML17yH3Mx1Y4gvsjH3jlbFYB2xm1LP9fsYcqUTXfUq1h7Qm+yKqMYY6VtXm6OKmC8zyBCWAOL+ufxajHhrKPjc1rPdQnKoFT7DlgQTwIbGs/XpuAa7V4A11dkgZjcxjR2L5LGlYOuB6J6GXvjZ6+Bk/D9EIZjUA==</CipherValue>\n      </CipherData>\n    </EncryptedData>\n  </connectionStrings>\n  <appSettings configProtectionProvider="CustomProvider">\n    <EncryptedData Type="http://www.w3.org/2001/04/xmlenc#Element" xmlns="http://www.w3.org/2001/04/xmlenc#">\n      <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes192-cbc" />\n      <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n        <EncryptedKey xmlns="http://www.w3.org/2001/04/xmlenc#">\n          <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5" />\n          <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n            <KeyName>rsaKey</KeyName>\n          </KeyInfo>\n          <CipherData>\n            <CipherValue>k+NzqHqxdYCd3+d+xN5HgUgchjvnCPYIewCY5Jn5ZcE2+CY9psnbS2JOSTSSwpbdK8Yj3rz6cyUwz6s3pQerzuNUyoqfpnoFRiuHh361SUeLrkuEj2PZshk8m3859+aCV4nTzgCsscjmKbFCcJ4ebp7mKvIhBMVNYCwT0gbuyw9IlmTZHxCenyqcmoDnbMlp0ugQKgFA/u9dFHtV/ehafnX9wIDSEH2LXLjK3rrlbgOQOA+8wArl2/fc/zcdwiepbhSABIJ+TGkknKmTaI1RfG77oz8kTEyHsUXHizUCZUQZYgkGNIpJsoNNh0tDUuvrOeO7051pH83XCB2doVJxQQ==</CipherValue>\n          </CipherData>\n        </EncryptedKey>\n      </KeyInfo>\n      <CipherData>\n        <CipherValue>WWD3Hhcl76U03YgjYvouM/vaS6RAiyzvq8/6PskmPdCQa4fOmv+HuDTQ6WGUWD4cD7fpz0q4idA6c6XIXB7BGlTaWpV005zPFKJMNXNwlgCSHU0DSK/CcaVeFgmHxtMtemoCFvrfs/L5MBaseL/uk9XkDO+KSyi7bQTTO1W8o2LLwReNi6xmiADtw6MgWslDR8OJojKlyv0Nt2Ez6kaEBzxaFWcakUdc0/kooybH2wFnKoj5m+hnMzUmBqLbMJ3YG8eLwOZuAaXP27yZBc6KWeUjXiPK+QIg9MAvhQxdR3E=</CipherValue>\n      </CipherData>\n    </EncryptedData>\n  </appSettings>\n  <system.net>\n    <mailSettings>\n      <smtp configProtectionProvider="CustomProvider">\n        <EncryptedData Type="http://www.w3.org/2001/04/xmlenc#Element" xmlns="http://www.w3.org/2001/04/xmlenc#">\n          <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes192-cbc" />\n          <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n            <EncryptedKey xmlns="http://www.w3.org/2001/04/xmlenc#">\n              <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-1_5" />\n              <KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#">\n                <KeyName>rsaKey</KeyName>\n              </KeyInfo>\n              <CipherData>\n                <CipherValue>Wu+0mvl+CFUi0mZ10wwTJrp9WwKcu20NY6HKL6KR5QCCBkOdDdjzmsdnTEvJtZJgzIc9VEauZRhjQkzJ1vuNBt4bUsc43UR63FrlffbmB/ijBRbbVRD/rQvLH0k+QbmkR8Xdkp2VgIOHLVH1cehf2NXCyDKhpXsflr0Usaju0r1qYkyA6leM/oi0+loLUY56GJWuiq1a2xlqLfV2a0/pKXEZrzoGuSmDmw7h+sBJ7+ZLLLV5wp2Wv1mREpwH5Nr1wfEwsDq6D++51DF8aA+kIgK/sHLaO2qizDZS7FQ8vIUpRMP1j8N6DjEAD/azh7tMrf+5Q3R3GFeV5yF/juyB9w==</CipherValue>\n              </CipherData>\n            </EncryptedKey>\n          </KeyInfo>\n          <CipherData>\n            <CipherValue>JuKHBiPgrRkekkI05uwzwLIsp9lMkCAVXRi5GlLLtU5uSfgob0neMqJ2jAFTeUYVWs3whQXuOViO+o03JwuUZiYg0WEuV+n+LG2LYakwTbsZwqF03WOlFzAVtThSJOe/EZ680AejIB5QKNrFqkuXtrAH7RC6X5oEbrzMlIUtC0qqL/i4PH+HQ+33RVyWFS5L9CNdkU5T+oSkyb4iLyf7cfASFxNaHzAgKkOAsjlgPMM=</CipherValue>\n          </CipherData>\n        </EncryptedData>\n      </smtp>\n    </mailSettings>\n  </system.net>';
            self.useExampleConfigSections = function () {
                self.encrypted(self.exampleConfigSections);
                return false;
            };
            self.useCustomConfigSections = function () {
                self.encrypted(undefined);
                $(self.encryptedEl).focus();
                return false;
            };

            // decrypt
            self.decrypted = ko.observable();
            self.decryptedEl = undefined;
            self.isDecrypting = ko.observable(false);
            self.submitText = ko.computed(function () {
                return self.isDecrypting() ? 'Decrypting...' : 'Decrypt';
            });
            self.selectDecrypted = function(vm, e) {
                $(self.decryptedEl).select();
                if (e) e.preventDefault();
                return false;
            };
            self.submit = function () {
                if (!self.isValid()) {
                    self.errors.showAllMessages();
                }
                else {
                    self.isDecrypting(true);
                    $.ajax({
                        url: '/CloudConfigCrypto/Decrypt',
                        type: 'POST',
                        data: {
                            thumbprint: self.thumbprint(),
                            encrypted: self.encrypted()
                        }
                    })
                    .success(function (response) {
                        if (response.error) {
                            alert('The config section(s) could not be decrypted.\nReason: ' + response.error +
                                '\n\nAre you sure this is the thumbprint of the certificate used for encryption?');
                        }
                        else {
                            self.decrypted(response);
                            $('#dialog').dialog({
                                height: 500,
                                width: 960
                            });
                        }
                    })
                    .error(function () {
                        alert('something went wrong on the server :(');
                    })
                    .complete(function () {
                        self.isDecrypting(false);
                    });
                }
            };
            
            // download
            self.download = function (vm, e) {
                $(e.target).closest('form').submit();
                return false;
            };
        };

        var decryptViewModel = new DecryptViewModel();
        ko.applyBindingsWithValidation(ko.validatedObservable(decryptViewModel), document.body, {
            insertMessages: false,
            decorateElement: true,
            errorElementClass: 'input-validation-error',
            errorMessageClass: 'field-validation-error'
        });
    </script>

}


<h2>@ViewBag.Title</h2>
<form method="POST" data-bind="submit: submit">
    <br />
    <label for="thumbprint">Thumbprint</label>
    <a href="#" data-bind="click: useSampleThumbprint">Use sample certificate thumbprint</a> | 
    <a href="#" data-bind="click: useCustomThumbprint">Enter custom certificate thumbprint</a>
    <div>
        <span class="field-validation-error" data-bind="validationMessage: thumbprint"></span>
    </div>
    <input type="text" name="thumbprint" id="thumbprint" data-bind="value: thumbprint, validationElement: thumbprint, element: 'thumbprintEl'" style="width: 420px;" />
    <br />
    <br />
    <label for="encrypted">Encrypted config section(s)</label>
    <a href="#" data-bind="click: useExampleConfigSections">Use example config sections</a> |
    <a href="#" data-bind="click: useCustomConfigSections">Enter custom config sections</a>
    <div>
        <span class="field-validation-error" data-bind="validationMessage: encrypted"></span>
    </div>
    <textarea name="encrypted" id="encrypted" style="width: 960px; min-height: 400px;" data-bind="value: encrypted, validationElement: encrypted, element: 'encryptedEl'"></textarea>
    <br />
    <input type="submit" value="Decrypt" data-bind="value: submitText, enable: !isDecrypting()" />
    <img data-bind="visible: isDecrypting" src="~/images/spinner.gif" alt="" style="vertical-align: middle; display: inline-block;" />
</form>
<div id="dialog" title="Decrypted config section(s)" style="display: none;">
    <form method="POST" action="@Url.Action("Save", "CloudConfigCrypto")">
        <a href="" data-bind="click: selectDecrypted">Select the results</a> &amp; hit <kbd>CTRL + C</kbd> to copy, or
        <a href="@Url.Action("Save", "CloudConfigCrypto")" data-bind="click: download">Save to file</a>.
        <input name="content" type="hidden" data-bind="value: decrypted" />
        <input name="context" type="hidden" value="Decrypted" />
    </form>
    <textarea data-bind="value:decrypted, element: 'decryptedEl'" style="width: 900px; height: 400px;"></textarea>
</div>
